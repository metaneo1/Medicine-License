@using System.Web.UI.WebControls
@using MvcBaseApp.Controllers
@using MvcBaseApp.Resources
@using System.Drawing

@model DataModel.ActivityType

@{
}

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "AddActivityTypeFormLayout";
    settings.AlignItemCaptionsInAllGroups = true;
    settings.Items.AddGroupItem(g =>
    {
        g.Caption = Labels.ActivityType_MainInfo;
        g.ColCount = 1;
 g.Items.Add(m => m.Name_ru, i =>
        {
            i.ClientVisible = Html.HasRoleView(Session, "ActivityType_Name_ru");
            i.NestedExtension().TextBox(tb =>
            {
                tb.Width = Unit.Pixel(250);
                tb.ShowModelErrors = true;
                tb.Properties.ValidationSettings.Display = Display.Dynamic;
                tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                if (!Html.HasRoleEnable(Session, "ActivityType_Name_ru"))
                {
                    tb.Enabled = false;
                    tb.Properties.Style.BackColor = Color.LightGray;
                    tb.Properties.Style.ForeColor = Color.Black;
                }
            });
        }).Caption = Labels.ActivityType_Name_ru;
 g.Items.Add(m => m.Name_kg, i =>
        {
            i.ClientVisible = Html.HasRoleView(Session, "ActivityType_Name_kg");
            i.NestedExtension().TextBox(tb =>
            {
                tb.Width = Unit.Pixel(250);
                tb.ShowModelErrors = true;
                tb.Properties.ValidationSettings.Display = Display.Dynamic;
                tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                if (!Html.HasRoleEnable(Session, "ActivityType_Name_kg"))
                {
                    tb.Enabled = false;
                    tb.Properties.Style.BackColor = Color.LightGray;
                    tb.Properties.Style.ForeColor = Color.Black;
                }
            });
        }).Caption = Labels.ActivityType_Name_kg;
 g.Items.Add(m => m.Description_ru, i =>
        {
            i.ClientVisible = Html.HasRoleView(Session, "ActivityType_Description_ru");
            i.NestedExtension().TextBox(tb =>
            {
                tb.Width = Unit.Pixel(250);
                tb.ShowModelErrors = true;
                tb.Properties.ValidationSettings.Display = Display.Dynamic;
                tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                if (!Html.HasRoleEnable(Session, "ActivityType_Description_ru"))
                {
                    tb.Enabled = false;
                    tb.Properties.Style.BackColor = Color.LightGray;
                    tb.Properties.Style.ForeColor = Color.Black;
                }
            });
        }).Caption = Labels.ActivityType_Description_ru;
 g.Items.Add(m => m.Description_kg, i =>
        {
            i.ClientVisible = Html.HasRoleView(Session, "ActivityType_Description_kg");
            i.NestedExtension().TextBox(tb =>
            {
                tb.Width = Unit.Pixel(250);
                tb.ShowModelErrors = true;
                tb.Properties.ValidationSettings.Display = Display.Dynamic;
                tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                if (!Html.HasRoleEnable(Session, "ActivityType_Description_kg"))
                {
                    tb.Enabled = false;
                    tb.Properties.Style.BackColor = Color.LightGray;
                    tb.Properties.Style.ForeColor = Color.Black;
                }
            });
        }).Caption = Labels.ActivityType_Description_kg;
 g.Items.Add(m => m.CODE, i =>
        {
            i.ClientVisible = Html.HasRoleView(Session, "ActivityType_CODE");
            i.NestedExtension().TextBox(tb =>
            {
                tb.Width = Unit.Pixel(250);
                tb.ShowModelErrors = true;
                tb.Properties.ValidationSettings.Display = Display.Dynamic;
                tb.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.None;
                if (!Html.HasRoleEnable(Session, "ActivityType_CODE"))
                {
                    tb.Enabled = false;
                    tb.Properties.Style.BackColor = Color.LightGray;
                    tb.Properties.Style.ForeColor = Color.Black;
                }
            });
        }).Caption = Labels.ActivityType_CODE;
    });
    settings.Items.AddGroupItem(g =>
    {
        g.Caption = "";
        g.ColCount = 2;

        g.Items.Add(i =>
        {
            i.ShowCaption = DefaultBoolean.False;
            i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
            i.Width = 150;
            i.NestedExtension().Button(s =>
            {
                s.Name = "applyActivityTypeButton";
                s.Text = Labels.btnSave;
                s.Images.Image.Url = Url.Content("~/Content/icons/apply_32x32.png");
                s.UseSubmitBehavior = false;
                s.ClientSideEvents.Click = "OnSaveActivityTypeClick";
            });
        });
        g.Items.Add(i =>
        {
            i.ShowCaption = DefaultBoolean.False;
            i.HorizontalAlign = FormLayoutHorizontalAlign.Left;
            i.Width = 150;
            i.NestedExtension().Button(s =>
            {
                s.Name = "cancelActivityTypeButton";
                s.Text = Labels.btnCancel;
                s.Images.Image.Url = Url.Content("~/Content/icons/cancel_32x32.png");
                s.UseSubmitBehavior = false;
                s.ClientSideEvents.Click = "OnCancelActivityTypeClick";
            });
        });
    });

}).GetHtml()
